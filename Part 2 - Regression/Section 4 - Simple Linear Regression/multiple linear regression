#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sun Jan 27 14:01:53 2019

@author: kanik
"""

#Multiple linear regression

#import libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#importing the dataset
dataset = pd.read_csv('50_Startups.csv')
X=dataset.iloc[:,:-1].values
Y=dataset.iloc[:,-1].values

# dealing with categorical data 
from sklearn.preprocessing import LabelEncoder ,OneHotEncoder
l_X= LabelEncoder()
X[:,3]=l_X.fit_transform(X[:,3])
o=OneHotEncoder(categorical_features=[3])
X=o.fit_transform(X).toarray()

#Avoiding the dummy variable trap
X=X[:,1:]

#spliting the dataset into train test split model
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=1/5,random_state=0)

#fitting the multiple linear regression
from sklearn.linear_model import LinearRegression
re=LinearRegression()
re.fit(X_train,Y_train)

#predict the values
Y_pred=re.predict(X_test)

#building the optimal model using backward elimination
import statsmodels.formula.api as sm
X=np.append(arr=np.ones((50,1)).astype(int), values=X,axis=1)

X_opt=X[:,[0,1,2,3,4,5]]
re_OLS =sm.OLS(endog = Y,exog =X_opt).fit()
re_OLS.summary()

X_opt=X[:,[0,1,3,4,5]]
re_OLS =sm.OLS(endog = Y,exog =X_opt).fit()
re_OLS.summary()

X_opt=X[:,[0,1,4,5]]
re_OLS =sm.OLS(endog = Y,exog =X_opt).fit()
re_OLS.summary()

X_opt=X[:,[0,4,5]]
re_OLS =sm.OLS(endog = Y,exog =X_opt).fit()
re_OLS.summary()

X_opt=X[:,[4,5]]
re_OLS =sm.OLS(endog = Y,exog =X_opt).fit()
re_OLS.summary()